#!/bin/bash

# Enable colors
BLUE='\033[1;34m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m' # No Color

CONFIG_FILE="$HOME/.skyscraper/config.ini"

# Function: Show Pegasus Banner
show_banner() {
    clear
    echo -e "${BLUE}"
    echo "██████╗ ███████╗ ██████╗  █████╗  ██████╗ ██╗   ██╗ ██████╗ "
    echo "██╔══██╗██╔════╝██╔════╝ ██╔══██╗██╔════╝ ██║   ██║██╔════╝ "
    echo "██████╔╝█████╗  ██║  ███╗███████║██║  ███╗██║   ██║██║  ███╗"
    echo "██╔══██╗██╔══╝  ██║   ██║██╔══██║██║   ██║██║   ██║██║   ██║"
    echo "██║  ██║███████╗╚██████╔╝██║  ██║╚██████╔╝╚██████╔╝╚██████╔╝"
    echo "╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚═╝  ╚═╝ ╚═════╝  ╚═════╝  ╚═════╝ "
    echo -e "${NC}"
}

# Function: Open Website (Screenscraper link)
open_website() {
    echo -e "${YELLOW}[•] Opening Screenscraper website...${NC}"
    xdg-open "https://screenscraper.fr/membreinscription.php"  # Opens in default web browser
    sleep 1
}

# Function: Setup Pegasus (Runs Mark's Skyscraper setup)
setup_pegasus() {
    echo -e "${YELLOW}[•] Setting up Pegasus (Skyscraper)...${NC}"
    curl -O -L -q https://raw.githubusercontent.com/SoumyBhow/Skyscraper-Android-Installer-Script/master/termux_update_skyscraper.sh \
        && chmod +x termux_update_skyscraper.sh \
        && bash termux_update_skyscraper.sh
    echo -e "${GREEN}[✓] Pegasus setup complete!${NC}"
    sleep 1.5
}

# Function: Select User Configuration
select_user_config() {
    echo -e "${BLUE}---------------------------------${NC}"
    echo -e "${GREEN}  1. ARMv7${NC}"
    echo -e "${GREEN}  2. not done yet, no idea how well it works${NC}"
    echo -e "${BLUE}---------------------------------${NC}"
    read -p "Select an option: " config_choice

    case $config_choice in
        1)  
            if [ -d "$HOME/.skyscraper" ]; then
                cd "$HOME/.skyscraper"
                echo -e "${YELLOW}[•] Removing old config.ini...${NC}"
                rm -fr config.ini
                echo -e "${YELLOW}[•] Downloading new config.ini silently in the background...${NC}"
                wget -q -O config.ini https://github.com/CSCash/EMU-SETUP-PEGASUS-/releases/download/config.ini/config.ini &
                echo -e "${GREEN}[✓] Config update started in the background!${NC}"
            else
                echo -e "${RED}[✗] Folder .skyscraper not found! Run Setup first.${NC}"
            fi
            sleep 1.5
            ;;
        2)  
            echo -e "${YELLOW}[•] This option is not ready yet!${NC}"
            sleep 1.5
            ;;
        *)  
            echo -e "${RED}[✗] Invalid option! Try again.${NC}"
            sleep 1
            ;;
    esac
}

# Function: Login to Scraper (Screenscraper)
login_to_scraper() {
    if [ ! -f "$CONFIG_FILE" ]; then
        echo -e "${RED}[✗] Config file not found! Run Setup first.${NC}"
        return
    fi

    echo -e "${YELLOW}Enter your Screenscraper login credentials:${NC}"
    read -p "Username: " username
    read -sp "Password: " password
    echo ""

    if [[ -z "$username" || -z "$password" ]]; then
        echo -e "${RED}[✗] Username or password cannot be empty.${NC}"
        return
    fi

    new_creds="userCreds=\"$username:$password\""

    # Update the config file
    if grep -q '^userCreds=' "$CONFIG_FILE"; then
        sed -i "s|^userCreds=.*|$new_creds|" "$CONFIG_FILE"
    else
        echo "[screenscraper]" >> "$CONFIG_FILE"
        echo "$new_creds" >> "$CONFIG_FILE"
    fi

    echo -e "${GREEN}[✓] Login credentials updated successfully!${NC}"
    sleep 1.5
}

# Config Management Menu
config_management() {
    while true; do
        echo -e "${BLUE}---------------------------------${NC}"
        echo -e "${GREEN}  1. Login to Scraper${NC}"
        echo -e "${GREEN}  2. Back to Main Menu${NC}"
        echo -e "${BLUE}---------------------------------${NC}"
        read -p "Select an option: " config_choice

        case $config_choice in
            1) login_to_scraper ;;
            2) break ;;
            *) echo -e "${RED}Invalid option! Try again.${NC}"; sleep 1 ;;
        esac
    done
}

# Main Menu Loop
while true; do
    show_banner
    echo -e "${BLUE}---------------------------------${NC}"
    echo -e "${GREEN}  1. Open Screenscraper Website${NC}"  # Open website first in the list
    echo -e "${GREEN}  2. Setup Pegasus${NC}"
    echo -e "${GREEN}  3. Select User Config${NC}"
    echo -e "${GREEN}  4. Config Management${NC}"
    echo -e "${GREEN}  5. Exit${NC}"  # Exit stays at the bottom
    echo -e "${BLUE}---------------------------------${NC}"

    # Ask user for input
    read -p "Select an option: " choice

    case $choice in
        1) open_website ;;  # Option to open the website
        2) setup_pegasus ;;
        3) select_user_config ;;
        4) config_management ;;
        5) echo -e "${YELLOW}Exiting...${NC}"; exit ;;
        *) echo -e "${RED}Invalid option! Try again.${NC}"; sleep 1 ;;
    esac
done
